name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      elasticsearch:
        image: elasticsearch:8.15.3
        env:
          discovery.type: single-node
          xpack.security.enabled: false
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"
        ports:
          - 9200:9200
          - 9300:9300
        options: >-
          --health-cmd "curl -f http://localhost:9200/_cluster/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    strategy:
      matrix:
        go-version: [1.23, 1.24]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Format check
      run: |
        go fmt ./...
        git diff --exit-code

    - name: Vet
      run: go vet $(go list ./... | grep -v '/examples/')

    - name: Run unit tests
      run: go test -v -race -short $(go list ./... | grep -v '/examples/')

    - name: Wait for Elasticsearch
      run: |
        timeout 60 bash -c 'until curl -s http://localhost:9200/_cluster/health | grep -q "green\|yellow"; do sleep 1; done'

    - name: Run integration tests
      env:
        ELASTICSEARCH_HOSTS: localhost:9200
        ELASTICSEARCH_TLS_ENABLED: false
      run: go test -v -race $(go list ./... | grep -v '/examples/')

    - name: Run tests with coverage
      env:
        ELASTICSEARCH_HOSTS: localhost:9200
        ELASTICSEARCH_TLS_ENABLED: false
      run: go test -v -race -coverprofile=coverage.out $(go list ./... | grep -v '/examples/')

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out

  examples:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24

    - name: Test examples build
      run: |
        echo "Testing example builds..."
        for example_dir in examples/*/; do
          if [ -f "$example_dir/go.mod" ]; then
            echo "Building example in $example_dir"
            cd "$example_dir"
            go mod download
            go build .
            cd - > /dev/null
          fi
        done

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
